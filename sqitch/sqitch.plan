%syntax-version=1.0.0
%project=maevsi
%uri=https://github.com/maevsi/maevsi/

privilege_execute_revoke 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Revoke execute privilege from public.
role_postgraphile 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add role postgraphile.
role_anonymous [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add role anonymous.
role_account [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add role account.
role_tusd [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add role tusd.
schema_public [role_anonymous role_account role_tusd] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add public schema.
schema_private 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add private schema.
extension_pgcrypto [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add extension pgcrypto.
extension_uuid-ossp [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add extension uuid-ossp.
function_events_organized [privilege_execute_revoke schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is the organizer.
function_invite_claim_array [privilege_execute_revoke schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function that returns the current invite clains as UUID array.
function_invites_contact [privilege_execute_revoke schema_private function_invite_claim_array function_events_organized] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Displays the same values as a SELECT on the invite_contact table. Used as prevention for a circular dependency.
table_account [schema_private schema_public extension_uuid-ossp] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table account.
table_contact [schema_public role_account role_anonymous table_account function_invites_contact] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table contact.
enum_invitation_feedback [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Possible answers to an invitation: accepted, canceled.
enum_event_visibility [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Possible visibilities of events and event groups: public, private.
table_event_group [schema_public schema_private role_account role_anonymous table_account enum_event_visibility] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table event_group.
index_event_group_organizer_username [table_event_group] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the event group table's organizer_username field.
function_events_invited [privilege_execute_revoke schema_public function_invite_claim_array] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is invited.
table_event [schema_public schema_private role_account role_anonymous table_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table event.
index_event_organizer_username [table_event] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the event table's username field.
enum_invitation_feedback_paper 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Possible choices on how to receive a paper invitation: paper, digital.
function_invite_feedback_ids [privilege_execute_revoke schema_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function that returns all accessible invitation feedback ids.
table_invitation_feedback_data [schema_public enum_invitation_feedback enum_invitation_feedback_paper function_invite_feedback_ids] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a table that includes invitation feedback data.
table_invite_account [schema_public role_account table_event table_account table_invitation_feedback_data function_events_organized] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table invite account.
table_invite_contact [schema_public role_anonymous table_event table_contact table_invite_account table_invitation_feedback_data function_invite_claim_array function_events_organized] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table invite contact.
function_invitee_count [privilege_execute_revoke schema_public role_account role_anonymous table_invite_account table_invite_contact] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add function that returns the invitee count for an event.
table_event_policy [schema_public schema_private table_event table_invite_account table_invite_contact function_events_invited function_invitee_count] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add policy for table event.
index_invite_account_event_id [table_invite_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the invite account table's event_id field.
index_invite_account_account_id [table_invite_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the invite account table's username field.
index_invite_contact_event_id [table_invite_contact] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the invite contact table's event_id field.
index_invite_contact_contact_id [table_invite_contact] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the invite contact table's contact_id field.
table_event_grouping [schema_public role_account role_anonymous table_event table_event_group] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table event grouping.
index_event_grouping_event_id [table_event_grouping] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the event grouping table's event_id field.
index_event_grouping_event_group_id [table_event_grouping] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add an index to the event grouping table's event_group_id field.
type_jwt [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add type jwt.
function_account_register [privilege_execute_revoke schema_private schema_public role_anonymous table_contact table_account extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add function account register.
table_jwt [schema_private extension_uuid-ossp] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add table for JWTs.
function_authenticate [privilege_execute_revoke schema_public extension_uuid-ossp role_account role_anonymous type_jwt table_account table_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function to authenticate accounts.
function_account_password_change [privilege_execute_revoke schema_public schema_private role_account table_account extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function that allows to change an account's password.
type_event_unlock_response [schema_public type_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a type that is returned by invitation code redemption.
function_event_unlock [privilege_execute_revoke schema_public table_invite_account table_invite_contact table_event type_event_unlock_response function_invite_claim_array type_jwt table_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add function that allows to enter invitation codes.
type_event_contact_feedback [schema_public table_event table_contact table_invitation_feedback_data] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a custom type consisting of an event and an contact.
function_event_contact_feedback_data [privilege_execute_revoke schema_public table_event table_contact table_invite_account table_invite_contact type_event_contact_feedback] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Returns the event as indicated by the event organizer''s username and event slug together with the accessing contact and its feedback data.
function_jwt_refresh [privilege_execute_revoke schema_public type_jwt table_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add function that refreshes tokens.
table_upload [schema_public schema_private table_account role_account role_tusd] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # An upload.
function_upload_create [privilege_execute_revoke extension_uuid-ossp schema_public schema_private role_account table_upload table_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Creates an upload with the given size if quota is available.
table_profile_picture [schema_public schema_private table_account table_upload role_account role_anonymous role_tusd] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Mapping of usernames to upload storage keys.
function_profile_picture_set [privilege_execute_revoke schema_public role_account table_profile_picture] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Sets the picture with the given storage key as the invoker's profile picture.
function_event_delete [privilege_execute_revoke schema_public role_account table_account table_event extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function that allows to delete an event.
function_account_delete [privilege_execute_revoke schema_public role_account table_account table_event extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Add a function that allows to delete an account.
function_account_email_address_verification [extension_uuid-ossp privilege_execute_revoke schema_private schema_public role_account role_anonymous table_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Sets the account''s email address verification code to `NULL` for which the email address verification code equals the one passed and is up to date.
function_account_password_reset_request [extension_uuid-ossp privilege_execute_revoke schema_private schema_public role_anonymous table_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Sets a new password reset verification code for an account.
function_account_password_reset [extension_uuid-ossp privilege_execute_revoke schema_private schema_public role_anonymous table_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Sets a new password for an account if there was a request to do so before that's still up to date.
function_event_is_existing [privilege_execute_revoke schema_public table_event role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail@jonas-thelemann.de> # Shows if an event exists.
